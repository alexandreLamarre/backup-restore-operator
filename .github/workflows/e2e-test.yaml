# name: Backup Restore CI

# on:
#   push:
#     paths-ignore:
#       - 'docs/**'
#       - '*.md'
#       - '.gitignore'
#       - 'CODEOWNERS'
#       - 'LICENSE'

# env :
#   K3D_VERSION : v5.4.6
#   CLUSTER_NAME : backup-restore

# jobs:
#   e2e:
#     name : e2e-test
#     runs-on : ubuntu-latest
#     strategy:
#       matrix:
#         K8S_VERSION_FROM_CI : ["v1.24","stable"]
#         include:
#           - platform: linux/amd64
#           - platform: linux/arm64
#     steps:
#       - name : Checkout repository
#         uses : actions/checkout@v4
#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3 
#       - name : Install K3D
#         run : ./.github/workflows/e2e/scripts/install-k3d.sh
#       - name : Install minio client
#         run : |
#           curl https://dl.min.io/client/mc/release/linux-amd64/mc > mc
#           mv mc /usr/local/bin/
#       - name : Setup environment variables
#         run : echo "K8S_VERSION_FROM_CI=${{ matrix.K8S_VERSION_FROM_CI }}" >> $GITHUB_ENV
#       - name : CI
#         run : make ci
#       - name : Setup Cluster 
#         run : ./.github/workflows/e2e/scripts/setup-cluster.sh
#       - name : Cluster info
#         run: |
#           kubectl cluster-info --context k3d-${{ env.CLUSTER_NAME }}
#           kubectl config use-context k3d-${{ env.CLUSTER_NAME }}
#           kubectl get nodes -o wide
#       - name : Import BRO images
#         run : k3d image import ${{ env.REPO }}/rancher/backup-restore-operator:${{ env.TAG}} -c ${{ env.CLUSTER_NAME }}
#       - name : e2e test
#         run : ./scripts/integration
        
